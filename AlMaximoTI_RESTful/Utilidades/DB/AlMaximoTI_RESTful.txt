
:::::Creación de Base de datos y tablas:::::

CREATE DATABASE AlMaximoTI_RESTful;

USE AlMaximoTI_RESTful;

CREATE TABLE TiposProducto (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    Nombre VARCHAR(100) NOT NULL,
    Descripcion TEXT
);

CREATE TABLE Proveedores (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    Nombre VARCHAR(100) NOT NULL,
    Descripcion TEXT
);

CREATE TABLE Productos (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    Clave VARCHAR(50) NOT NULL,
    Nombre VARCHAR(100) NOT NULL,
    TipoProductoId INT,
    EsActivo BIT,
    Precio DECIMAL(10, 2),
    FOREIGN KEY (TipoProductoId) REFERENCES TiposProducto(Id)
);

CREATE TABLE ProductoProveedor (
    ProductoId INT,
    ProveedorId INT,
    ClaveProveedor VARCHAR(50),
    Costo DECIMAL(10, 2),
    PRIMARY KEY (ProductoId, ProveedorId),
    FOREIGN KEY (ProductoId) REFERENCES Productos(Id)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    FOREIGN KEY (ProveedorId) REFERENCES Proveedores(Id)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);


:::::Inserción de datos:::

INSERT INTO Proveedores(Nombre, Descripcion)
VALUES('La chiquita', 'Supermercado lider en abarrotes');

INSERT INTO Proveedores(Nombre, Descripcion)
VALUES('Oxxo', 'Su mejor tienda de Conveniencia');

INSERT INTO Proveedores(Nombre, Descripcion)
VALUES('Abarrotes Jazmin', 'Distribuidora #1 en todo leon con los mejores precios');

INSERT INTO Proveedores(Nombre, Descripcion)
VALUES('Mini Market', 'Tenemos de tocho morocho');

INSERT INTO TiposProducto(Nombre, Descripcion)
VALUES('Limpieza', 'Todo lo referente a la limpieza de su hogar, oficina o muebles');

INSERT INTO TiposProducto(Nombre, Descripcion)
VALUES('Bebidas', 'Todo tipo de bebidas para este calor');

INSERT INTO TiposProducto(Nombre, Descripcion)
VALUES('Lacteos', 'Todo tipo de lacteos desde leche hasta yogurth');

INSERT INTO TiposProducto(Nombre, Descripcion)
VALUES('Cigarros', 'No fume, hace daño');

INSERT INTO Productos(Clave, Nombre, TipoProductoId, EsActivo, Precio)
VALUES('FabMor01', 'Fabuloso Morado', 1, 1, 28.50);

INSERT INTO Productos(Clave, Nombre, TipoProductoId, EsActivo, Precio)
VALUES('FabVer02', 'Fabuloso Verde', 1, 1, 25.50);

INSERT INTO Productos(Clave, Nombre, TipoProductoId, EsActivo, Precio)
VALUES('Cheve01', 'Caguama', 2, 1, 45);

INSERT INTO Productos(Clave, Nombre, TipoProductoId, EsActivo, Precio)
VALUES('Chesco01', 'Coca-Cola 600 ml', 2, 1, 18);

INSERT INTO Productos(Clave, Nombre, TipoProductoId, EsActivo, Precio)
VALUES('Dan01', 'Danonino 4 pack', 3, 1, 32.50);

INSERT INTO Productos(Clave, Nombre, TipoProductoId, EsActivo, Precio)
VALUES('Dan02', 'Danup 600 ml', 3, 1, 13.50);

INSERT INTO Productos(Clave, Nombre, TipoProductoId, EsActivo, Precio)
VALUES('Cig01', 'Marlboro', 4, 1, 80);

INSERT INTO Productos(Clave, Nombre, TipoProductoId, EsActivo, Precio)
VALUES('Cig02', 'Win', 4, 1, 25);

INSERT INTO ProductoProveedor(ProductoId, ProveedorId, ClaveProveedor, Costo)
VALUES(1, 1, 'FM001', 24.50);

INSERT INTO ProductoProveedor(ProductoId, ProveedorId, ClaveProveedor, Costo)
VALUES(2, 3, 'FaVerde', 22.50);

INSERT INTO ProductoProveedor(ProductoId, ProveedorId, ClaveProveedor, Costo)
VALUES(3, 3, 'Caguamon', 37.50);

INSERT INTO ProductoProveedor(ProductoId, ProveedorId, ClaveProveedor, Costo)
VALUES(4, 1, 'Coca-01', 14.50);

INSERT INTO ProductoProveedor(ProductoId, ProveedorId, ClaveProveedor, Costo)
VALUES(5, 3, 'Dan-4pack', 26.50);

INSERT INTO ProductoProveedor(ProductoId, ProveedorId, ClaveProveedor, Costo)
VALUES(6, 4, 'Dan-600', 10.50);

INSERT INTO ProductoProveedor(ProductoId, ProveedorId, ClaveProveedor, Costo)
VALUES(7, 2, 'Marl', 70.50);

INSERT INTO ProductoProveedor(ProductoId, ProveedorId, ClaveProveedor, Costo)
VALUES(8, 3, 'Winchester', 20);

INSERT INTO ProductoProveedor(ProductoId, ProveedorId, ClaveProveedor, Costo)
VALUES(1, 3, 'FabulosinDelMoradin', 24.55);

INSERT INTO ProductoProveedor(ProductoId, ProveedorId, ClaveProveedor, Costo)
VALUES(1, 4, 'Fabu321', 25.55);

:::::Procedimientos Almacenados:::::

:::::Obtener todos los productos::::: 

CREATE PROCEDURE sp_TodosLosProductos
AS
BEGIN
    SELECT 
        p.Id,
        p.Clave,
        p.Nombre,
        p.TipoProductoId AS TipoId,
        tp.Nombre AS TipoNombre,
        p.EsActivo,
        p.Precio
    FROM 
        Productos p
    INNER JOIN 
        TiposProducto tp ON p.TipoProductoId = tp.Id
END

:::::::::::::::::::::::::::::::::::::::::::::::::::::::

:::::Obtener todos los tipos de productos::::::::::::::

CREATE PROCEDURE sp_TiposProducto
AS
BEGIN
    SELECT Id, Nombre
    FROM TiposProducto
END

:::::::::::::::::::::::::::::::::::::::::::::::::::::::

:::::Buscar Productos::::::::::::::::::::::::::::::::::

CREATE PROCEDURE sp_BuscarProductos
    @Clave VARCHAR(50) = NULL,
    @NombreTipo VARCHAR(50) = NULL
AS
BEGIN
    SELECT 
        p.Id,
        p.Clave,
        p.Nombre,
        p.TipoProductoId AS TipoId,
        tp.Nombre AS TipoNombre,
        p.EsActivo,
        p.Precio
    FROM 
        Productos p
    LEFT JOIN 
        TiposProducto tp ON p.TipoProductoId = tp.Id
    WHERE 
        (@Clave IS NULL OR p.Clave LIKE '%' + @Clave + '%')
        AND (@NombreTipo IS NULL OR tp.Nombre = @NombreTipo)
END

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:::::::::::::::::::::Agregar Productos:::::::::::::::::::::::

CREATE PROCEDURE sp_CrearProducto
    @Clave VARCHAR(50),
    @Nombre VARCHAR(100),
    @TipoProductoId INT,
    @EsActivo BIT,
    @Precio DECIMAL(10, 2)
AS
BEGIN
    INSERT INTO Productos (Clave, Nombre, TipoProductoId, EsActivo, Precio)
    VALUES (@Clave, @Nombre, @TipoProductoId, @EsActivo, @Precio);
END;

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

::::::::::::::::Actualizar Producto:::::::::::::::::::::::::::::

CREATE PROCEDURE sp_ActualizarProducto
    @Id INT,
    @Clave VARCHAR(50),
    @Nombre VARCHAR(100),
    @TipoProductoId INT,
    @EsActivo BIT,
    @Precio DECIMAL(10, 2)
AS
BEGIN
    UPDATE Productos
    SET 
        Clave = @Clave,
        Nombre = @Nombre,
        TipoProductoId = @TipoProductoId,
        EsActivo = @EsActivo,
        Precio = @Precio
    WHERE Id = @Id;
END

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:::::::::::::Obtener producto por id:::::::::::::::::::::::::::::::

CREATE PROCEDURE sp_ObtenerProductoPorId
    @Id INT
AS
BEGIN
    SELECT 
        p.Id,
        p.Clave,
        p.Nombre,
        p.TipoProductoId AS TipoId,
        tp.Nombre AS TipoNombre,
        p.EsActivo,
        p.Precio
    FROM 
        Productos p
    LEFT JOIN 
        TiposProducto tp ON p.TipoProductoId = tp.Id
    WHERE 
        p.Id = @Id;
END

:::::::::::::::::::::::::::::::::::::::::::::::::::::::

::::::::::::Obtener proveedores de mi producto:::::::::

CREATE PROCEDURE sp_ObtenerProveedoresDelProducto
    @ProductoId INT
AS
BEGIN
    SELECT 
        ProductoId,
        ProveedorId,
		pr.Nombre,
        ClaveProveedor,
        Costo
    FROM 
        ProductoProveedor
		JOIN Proveedores pr ON ProveedorId = pr.Id
    WHERE 
        ProductoId = @ProductoId;
END;

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

::::::::::::Eliminar Producto:::::::::::::::::::::::::::::::::

CREATE PROCEDURE sp_EliminarProducto
    @ProductoId INT
AS
BEGIN
    DELETE FROM Productos
    WHERE Id = @ProductoId;
END

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:::::::::::::Obtener Proveedores:::::::::::::::::::::::::::::::::

CREATE PROCEDURE sp_ObtenerProveedores
AS
BEGIN
    SELECT Id, Nombre
    FROM Proveedores;
END;
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

::::::::::Insertar ProductoProveedor:::::::::::::::::::::::::::::

CREATE PROCEDURE sp_InsertarProductoProveedor
    @ProductoId INT,
    @ProveedorId INT,
    @ClaveProveedor VARCHAR(50),
    @Costo DECIMAL(10, 2)
AS
BEGIN
    INSERT INTO ProductoProveedor (ProductoId, ProveedorId, ClaveProveedor, Costo)
    VALUES (@ProductoId, @ProveedorId, @ClaveProveedor, @Costo);
END;

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

::::::::::::::: Editar ProductoProveedor:::::::::::::::::::::::::::::::::::::

CREATE PROCEDURE sp_EditarProductoProveedor
    @ProductoId INT,
    @ProveedorId INT,
    @NuevaClaveProveedor VARCHAR(50),
    @NuevoCosto DECIMAL(10, 2)
AS
BEGIN
    UPDATE ProductoProveedor
    SET ClaveProveedor = @NuevaClaveProveedor,
        Costo = @NuevoCosto
    WHERE ProductoId = @ProductoId
      AND ProveedorId = @ProveedorId;
END;

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

::::::::::::::::Eliminar Producto Proveedor::::::::::::::::::::::::::::::::::::::::::::

CREATE PROCEDURE sp_EliminarProductoProveedor
    @ProductoId INT,
    @ProveedorId INT
AS
BEGIN
   
    BEGIN TRANSACTION;

    BEGIN TRY

        DELETE FROM ProductoProveedor
        WHERE ProductoId = @ProductoId AND ProveedorId = @ProveedorId;

        
        COMMIT TRANSACTION;

        PRINT 'El registro ha sido eliminado exitosamente.';
    END TRY
    BEGIN CATCH
      
        ROLLBACK TRANSACTION;

       
        DECLARE @ErrorMessage NVARCHAR(4000);
        DECLARE @ErrorSeverity INT;
        DECLARE @ErrorState INT;

        SELECT 
            @ErrorMessage = ERROR_MESSAGE(),
            @ErrorSeverity = ERROR_SEVERITY(),
            @ErrorState = ERROR_STATE();

        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
    END CATCH
END;
